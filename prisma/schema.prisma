// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  actor     Actor?
}

model Actor {
  id        String   @id @default(uuid())
  type      String // e.g., "Person", "Service"
  inbox     String   @unique
  outbox    String   @unique
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id])
  posts     Post[]
  following Follow[] @relation(name: "FollowingRelation")
  followers Follow[] @relation(name: "FollowerRelation")
}

model Post {
  id          String        @id @default(uuid())
  content     String
  published   DateTime      @default(now())
  authorId    String
  author      Actor         @relation(fields: [authorId], references: [id])
  HashtagPost HashtagPost[]
}

model Follow {
  id          String @id @default(uuid())
  followerId  String
  followingId String
  follower    Actor  @relation(name: "FollowerRelation", fields: [followerId], references: [id])
  following   Actor  @relation(name: "FollowingRelation", fields: [followingId], references: [id])
}

model Hashtag {
  id    String        @id @default(uuid())
  tag   String        @unique
  posts HashtagPost[]
}

model HashtagPost {
  postId    String
  hashtagId String
  post      Post    @relation(fields: [postId], references: [id])
  hashtag   Hashtag @relation(fields: [hashtagId], references: [id])

  @@id([postId, hashtagId])
}
